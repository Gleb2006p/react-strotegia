{"ast":null,"code":"import { regions } from \"./region-state\";\nlet regionsStore = {\n  get regions() {\n    return regions;\n  },\n\n  update() {\n    for (let region of regions) {\n      region.setColor();\n    }\n  },\n\n  getValue(tag, type) {\n    let typeSumm = 0;\n\n    for (let region of regions) {\n      if (region.owner.tag === tag) {\n        let typeValue = region[type];\n        typeSumm += typeValue;\n      }\n    }\n\n    return typeSumm;\n  },\n\n  dispatch(action) {},\n\n  setOwnerRegions(countriesState) {\n    for (let countryStateKey in countriesState) {\n      let countryState = countriesState[countryStateKey];\n\n      for (let region of regions) {\n        if (region.ownerTag === countryState.tag) {\n          region.owner = countryState;\n        }\n      }\n    }\n  }\n\n};\nexport default regionsStore;","map":{"version":3,"sources":["C:/Users/Glib/Desktop/projects/minecraft-countries/src/store/store-regions/regions-store.js"],"names":["regions","regionsStore","update","region","setColor","getValue","tag","type","typeSumm","owner","typeValue","dispatch","action","setOwnerRegions","countriesState","countryStateKey","countryState","ownerTag"],"mappings":"AACA,SAAQA,OAAR,QAAsB,gBAAtB;AACA,IAAIC,YAAY,GAAG;AACf,MAAID,OAAJ,GAAa;AACT,WAAOA,OAAP;AACH,GAHc;;AAIfE,EAAAA,MAAM,GAAE;AACJ,SAAK,IAAIC,MAAT,IAAmBH,OAAnB,EAA2B;AACvBG,MAAAA,MAAM,CAACC,QAAP;AACH;AACJ,GARc;;AASfC,EAAAA,QAAQ,CAACC,GAAD,EAAMC,IAAN,EAAW;AACf,QAAIC,QAAQ,GAAG,CAAf;;AACA,SAAK,IAAIL,MAAT,IAAmBH,OAAnB,EAA2B;AACvB,UAAIG,MAAM,CAACM,KAAP,CAAaH,GAAb,KAAqBA,GAAzB,EAA6B;AACzB,YAAII,SAAS,GAAGP,MAAM,CAACI,IAAD,CAAtB;AACAC,QAAAA,QAAQ,IAAIE,SAAZ;AACH;AACJ;;AACD,WAAOF,QAAP;AACH,GAlBc;;AAmBfG,EAAAA,QAAQ,CAACC,MAAD,EAAS,CAEhB,CArBc;;AAsBfC,EAAAA,eAAe,CAACC,cAAD,EAAgB;AAC3B,SAAK,IAAIC,eAAT,IAA4BD,cAA5B,EAA2C;AACvC,UAAIE,YAAY,GAAGF,cAAc,CAACC,eAAD,CAAjC;;AACA,WAAK,IAAIZ,MAAT,IAAmBH,OAAnB,EAA2B;AACvB,YAAIG,MAAM,CAACc,QAAP,KAAoBD,YAAY,CAACV,GAArC,EAA0C;AACtCH,UAAAA,MAAM,CAACM,KAAP,GAAeO,YAAf;AAEH;AACJ;AACJ;AACJ;;AAhCc,CAAnB;AAkCA,eAAgBf,YAAhB","sourcesContent":["\r\nimport {regions} from \"./region-state\";\r\nlet regionsStore = {\r\n    get regions(){\r\n        return regions;\r\n    },\r\n    update(){\r\n        for (let region of regions){\r\n            region.setColor();\r\n        }\r\n    },\r\n    getValue(tag, type){\r\n        let typeSumm = 0;\r\n        for (let region of regions){\r\n            if (region.owner.tag === tag){\r\n                let typeValue = region[type];\r\n                typeSumm += typeValue;\r\n            }\r\n        }\r\n        return typeSumm;\r\n    },\r\n    dispatch(action) {\r\n\r\n    },\r\n    setOwnerRegions(countriesState){\r\n        for (let countryStateKey in countriesState){\r\n            let countryState = countriesState[countryStateKey];\r\n            for (let region of regions){\r\n                if (region.ownerTag === countryState.tag) {\r\n                    region.owner = countryState;\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexport  default regionsStore;"]},"metadata":{},"sourceType":"module"}