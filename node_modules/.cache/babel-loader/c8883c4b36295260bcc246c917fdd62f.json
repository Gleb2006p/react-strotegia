{"ast":null,"code":"import { politicsReducer } from \"./politics-reducer\";\nimport SikvoaState from \"./sikvoa-state\";\n\nfunction rerender() {}\n\nlet store = {\n  _state: SikvoaState,\n\n  dispatch(action) {\n    politicsReducer(this, action);\n    rerender();\n  },\n\n  updateIdeas() {\n    let index = 0;\n\n    for (let idea of this._state.ideas) {\n      if (!idea.conditionAwaible(store)) {\n        this._state.ideas.splice(index, 1);\n      }\n\n      index++;\n    }\n  },\n\n  updateCurrentFlag() {\n    this._state.currentFlag = this._state.flags[this._state.rulingParty];\n  },\n\n  normalizeIdeologues() {\n    let summIdeology = 0;\n\n    for (let ideology in this._state.ideologues) {\n      let ideologyValue = this._state.ideologues[ideology];\n      summIdeology += ideologyValue;\n    }\n\n    for (let ideology in this._state.ideologues) {\n      this._state.ideologues[ideology] /= summIdeology;\n      this._state.ideologues[ideology] *= 100;\n    }\n  },\n\n  update() {\n    this._state.ideologuesDrift = {\n      communism: 0,\n      monarchy: 0,\n      imperialism: 0,\n      democracy: 0\n    };\n\n    for (let commander of this._state.commanders) {\n      commander.influence(this);\n    }\n\n    for (let idea of this._state.ideas) {\n      idea.influences(this);\n    }\n\n    for (let ideology in this._state.ideologuesDrift) {\n      this._state.ideologues[ideology] += this._state.ideologuesDrift[ideology];\n\n      if (this._state.ideologues[ideology] < 0) {\n        this._state.ideologues[ideology] = 0.01;\n      }\n    }\n\n    this.updateIdeas();\n    this.updateRulingParty();\n    this.updateCurrentFlag();\n    this.normalizeIdeologues();\n  },\n\n  updateRulingParty() {\n    for (let ideology in this._state.ideologues) {\n      let ideologyPopularity = this._state.ideologues[ideology];\n\n      if (ideologyPopularity > 50) {\n        this._state.rulingParty = ideology;\n      }\n    }\n  },\n\n  setDrift(ideology, driftValue, user) {\n    user.clearOptions();\n    this._state.ideologuesDrift[ideology] += driftValue;\n    user.addOptions(`Поддержка идеологии ${ideology} +${driftValue}`);\n  },\n\n  setUpdate(callback) {\n    rerender = callback;\n  },\n\n  generateIdeologuesData() {\n    let data = [];\n\n    for (let ideology in this._state.ideologues) {\n      let population = this._state.ideologues[ideology];\n      let dataObject = [ideology, population];\n      data.push(dataObject);\n    }\n\n    return data;\n  },\n\n  get rulingParty() {\n    return this._state.rulingParty;\n  },\n\n  get commanders() {\n    return this._state.commanders;\n  },\n\n  get ideas() {\n    return this._state.ideas;\n  },\n\n  get flag() {\n    return `images/flags/${this._state.currentFlag}`;\n  },\n\n  get ideologuesColor() {\n    return this._state.ideologuesColors;\n  }\n\n};\nstore.update();\nexport default store;","map":{"version":3,"sources":["C:/Users/Glib/Desktop/projects/minecraft-countries/src/store/store.js"],"names":["politicsReducer","SikvoaState","rerender","store","_state","dispatch","action","updateIdeas","index","idea","ideas","conditionAwaible","splice","updateCurrentFlag","currentFlag","flags","rulingParty","normalizeIdeologues","summIdeology","ideology","ideologues","ideologyValue","update","ideologuesDrift","communism","monarchy","imperialism","democracy","commander","commanders","influence","influences","updateRulingParty","ideologyPopularity","setDrift","driftValue","user","clearOptions","addOptions","setUpdate","callback","generateIdeologuesData","data","population","dataObject","push","flag","ideologuesColor","ideologuesColors"],"mappings":"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","sourcesContent":["import {politicsReducer} from \"./politics-reducer\";\r\nimport SikvoaState from \"./sikvoa-state\";\r\n\r\n\r\nfunction rerender(){\r\n\r\n}\r\n\r\nlet store = {\r\n    _state : SikvoaState,\r\n    dispatch(action){\r\n        politicsReducer(this, action);\r\n        rerender();\r\n    },\r\n    updateIdeas(){\r\n        let index = 0;\r\n        for (let idea of this._state.ideas){\r\n            if (!idea.conditionAwaible(store)){\r\n                this._state.ideas.splice(index, 1);\r\n            }\r\n            index ++\r\n        }\r\n    },\r\n    updateCurrentFlag(){\r\n        this._state.currentFlag = this._state.flags[this._state.rulingParty];\r\n    },\r\n    normalizeIdeologues(){\r\n        let summIdeology = 0;\r\n      for (let ideology in this._state.ideologues){\r\n          let ideologyValue = this._state.ideologues[ideology];\r\n          summIdeology += ideologyValue;\r\n      }\r\n      for (let ideology in this._state.ideologues){\r\n          this._state.ideologues[ideology] /= summIdeology;\r\n          this._state.ideologues[ideology] *= 100;\r\n      }\r\n    },\r\n    update(){\r\n        this._state.ideologuesDrift = {\r\n            communism : 0,\r\n            monarchy : 0,\r\n            imperialism : 0,\r\n            democracy : 0,\r\n        };\r\n        for (let commander of this._state.commanders){\r\n            commander.influence(this);\r\n        }\r\n        for (let idea of this._state.ideas){\r\n            idea.influences(this);\r\n        }\r\n        for (let ideology in this._state.ideologuesDrift){\r\n            this._state.ideologues[ideology] += this._state.ideologuesDrift[ideology];\r\n            if (this._state.ideologues[ideology] < 0){\r\n                this._state.ideologues[ideology] = 0.01;\r\n            }\r\n        }\r\n        this.updateIdeas();\r\n        this.updateRulingParty();\r\n        this.updateCurrentFlag();\r\n        this.normalizeIdeologues();\r\n    },\r\n    updateRulingParty(){\r\n        for (let ideology in this._state.ideologues){\r\n            let ideologyPopularity = this._state.ideologues[ideology];\r\n            if (ideologyPopularity > 50){\r\n                this._state.rulingParty = ideology;\r\n            }\r\n        }\r\n    },\r\n    setDrift(ideology, driftValue, user){\r\n        user.clearOptions();\r\n        this._state.ideologuesDrift[ideology] += driftValue;\r\n        user.addOptions(`Поддержка идеологии ${ideology} +${driftValue}`);\r\n\r\n    },\r\n    setUpdate(callback){\r\n        rerender = callback;\r\n    },\r\n    generateIdeologuesData(){\r\n        let data = [];\r\n\r\n        for (let ideology in this._state.ideologues){\r\n\r\n            let population = this._state.ideologues[ideology];\r\n            let dataObject = [ideology, population];\r\n            data.push(dataObject)\r\n        }\r\n        return data;\r\n    },\r\n    get rulingParty(){\r\n        return this._state.rulingParty;\r\n    },\r\n    get commanders(){\r\n        return this._state.commanders;\r\n    },\r\n    get ideas(){\r\n        return this._state.ideas;\r\n    },\r\n    get flag(){\r\n        return `images/flags/${this._state.currentFlag}`;\r\n    },\r\n    get ideologuesColor(){\r\n        return this._state.ideologuesColors;\r\n    },\r\n    \r\n}\r\nstore.update();\r\nexport default store;"]},"metadata":{},"sourceType":"module"}